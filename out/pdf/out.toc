\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\select@language {english}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {1.1}Contributions}{1}{section*.2}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {2}Related Work}{3}{chapter.2}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.1}Parallel Haskells}{3}{section*.4}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.2}Algorithmic skeletons}{4}{section*.5}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.3}Arrows}{4}{section*.6}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {2.3.1}Arrows in other languages}{5}{section*.7}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {3}Background}{7}{chapter.3}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {3.1}Functional Programming}{7}{section*.9}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.1.1}Why Functional Programming?}{7}{section*.10}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.1.2}A Short introduction to Haskell}{8}{section*.11}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Functional Programming vs Imperative Programming}{8}{section*.11}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Functions}{10}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Type inference}{11}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Function composition, higher-order functions, and function application}{12}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Conditional Computation}{13}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{\ensuremath {\mathbf {where}}, \ensuremath {\mathbf {let}}}{14}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Type safety}{15}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Type classes}{15}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Lazy Evaluation}{16}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Custom types}{19}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Pattern Matching}{21}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Lambdas and Partial application}{22}{figure.caption.15}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.1.3}Monads}{23}{section*.16}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.1.4}Arrows}{26}{section*.17}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {3.2}Short introduction to parallel Haskells}{28}{section*.21}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.2.1}Glasgow parallel Haskell -- GpH}{30}{section*.23}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.2.2}\ensuremath {\mathit {Par}} Monad}{30}{section*.25}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {3.2.3}Eden}{31}{section*.27}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Eden TraceViewer}{32}{section*.27}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {4}Parallel Arrows}{33}{chapter.4}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.1}The \ensuremath {\mathit {ArrowParallel}} type class}{33}{section*.29}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.2}\ensuremath {\mathit {ArrowParallel}} instances}{34}{section*.30}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.1}Glasgow parallel Haskell}{34}{section*.31}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.2}\ensuremath {\mathit {Par}} Monad}{35}{section*.33}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.3}Eden}{36}{section*.35}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.4}Default configuration instances}{37}{section*.37}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.3}Extending the interface}{37}{section*.38}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.1}Lazy \ensuremath {\mathit {parEvalN}}}{38}{section*.39}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.2}Heterogeneous tasks}{38}{section*.42}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.4}Basic \ensuremath {\mathit {map}}-based skeletons}{39}{section*.44}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.1}Parallel \ensuremath {\mathit {map}} and laziness}{39}{section*.45}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.2}Statically load-balancing parallel \ensuremath {\mathit {map}}}{40}{section*.49}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {5}Further development of Parallel Arrows}{41}{chapter.5}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.1}Futures}{41}{section*.51}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.2}Advanced topological skeletons}{44}{section*.57}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.2.1}Parallel pipe}{45}{section*.58}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.2.2}Ring skeleton}{48}{section*.62}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.2.3}Torus skeleton}{49}{section*.65}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {6}Experiment: Cloud Haskell Backend}{53}{chapter.6}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.1}Node discovery and program harness}{54}{section*.72}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.1}The \ensuremath {\mathit {State}} data-structure}{54}{section*.73}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.2}Starting Slave nodes}{55}{section*.74}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.3}Starting Master nodes}{56}{section*.75}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.4}Startup harness}{58}{section*.76}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.2}Parallel Evaluation with Cloud Haskell}{59}{section*.77}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.3}\ensuremath {\mathit {Future}}s}{60}{section*.78}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.4}Circular skeletons and issues with Laziness}{60}{section*.79}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {7}Performance results and discussion}{61}{chapter.7}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.1}Measurement platform}{61}{section*.81}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.1}Hardware and software}{61}{section*.82}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.2}Benchmarks}{62}{section*.83}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.3}What parallel Haskells run where}{63}{section*.84}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.2}Benchmark results}{63}{section*.85}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.1}Defining overhead}{63}{section*.86}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.2}Shared memory}{64}{section*.87}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Speedup}{64}{section*.87}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Overhead}{64}{section*.87}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.3}Distributed memory}{65}{section*.88}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Speedup}{65}{section*.88}
\defcounter {refsection}{0}\relax 
\contentsline {subsubsection}{Overhead}{65}{figure.caption.89}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.3}Discussion}{67}{section*.90}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {8}Discussion}{69}{chapter.8}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {9}Conclusion}{71}{chapter.9}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {9.1}Future work}{71}{section*.93}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {10}Appendix}{73}{chapter.10}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.1}Utility Arrows}{73}{section*.95}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.2}Profunctor Arrows}{74}{section*.99}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.3}Additional function definitions}{74}{section*.101}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.4}Syntactic sugar}{79}{section*.115}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.5}Experimental Cloud Haskell backend code}{79}{section*.116}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.6}Plots for the shared memory benchmarks}{83}{section*.119}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {10.7}Plots for the distributed memory benchmarks}{91}{section*.134}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{References}{95}{section*.142}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{List of Figures}{105}{section*.142}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{List of Tables}{109}{section*.142}
